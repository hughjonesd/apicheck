% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{when_api_same}
\alias{when_api_same}
\alias{when_fn_exists}
\title{Compare function existence and APIs across package versions}
\usage{
when_api_same(fn, package, current_fn = NULL, search = c("binary",
  "forward", "backward", "all", "parallel"), report = c("full", "brief"))

when_fn_exists(fn, package, search = c("binary", "forward", "backward", "all",
  "parallel"), report = c("full", "brief"))
}
\arguments{
\item{fn}{Function name as a character string.}

\item{package}{Package. Alternatively, specify the function name as e.g. \code{"package::function"}.}

\item{current_fn}{Current function for comparison. By default, \code{fn} in the current version of
the package (which is assumed to be available in a standard library location). If provided, this
must be an actual function, not a character string. You can use
\code{\link{get_fn_at}} for this.}

\item{search}{"binary", "forward", "backward", "all" or "parallel". See Details.}

\item{report}{"brief" or "full". See Value.}
}
\value{
If \code{report} is "brief", the earliest "known good" version.
Otherwise, a data frame of versions with a full results column.
}
\description{
\code{when_api_same} reports package versions where the API of a function was the same as now (or
the same as \code{current_fn}).

\code{when_fn_exists} reports the first package version where a function exists.
}
\details{
"Same API" is defined by the function arguments, as reported by \code{\link{formals}}, being the same.
}
\examples{
\dontrun{
when_api_same("read.dta", "foreign")
}
\dontrun{
when_fn_exists('read.dta', 'foreign')
}
}
