% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lib_dir.R
\name{set_lib_dir}
\alias{set_lib_dir}
\alias{get_lib_dir}
\alias{clear_lib_dir}
\title{Location of the package cache}
\usage{
set_lib_dir(lib_dir, create = FALSE)

get_lib_dir()

clear_lib_dir()
}
\arguments{
\item{lib_dir}{Path to a directory, or \code{NULL} to unset.}

\item{create}{Logical. Try to create the directory if it doesn't exist.}
}
\value{
\code{set_lib_dir} invisibly returns the old library location, or \code{NULL} if none was set in options.

\code{get_lib_dir} returns the actual library location, whether or not an option has been set.

\code{clear_lib_dir} invisibly returns TRUE if all files and directories could be removed, FALSE otherwise.
}
\description{
\code{set_lib_dir()} specifies where packages will be downloaded to. \code{get_lib_dir()} returns this
directory. \code{clear_lib_dir()} deletes all downloaded packages.
}
\details{
If \code{lib_dir} is set to \code{NULL}, a subdirectory of \code{tempdir()} will be used.
\code{lib_dir} will be normalized via \code{\link[=normalizePath]{normalizePath()}}.

The package cache is under the directory specified by \code{getOption("apicheck.lib_dir")},
or, if that is unset, in a per-session temporary directory. You should use \code{\link[=set_lib_dir]{set_lib_dir()}}
to change this rather than setting the option directly. Within this directory, subdirectories
are named like \code{package-version}, e.g. \code{longurl-0.3.0}. Within these subdirectories are
the actual installed libraries. So, \code{lib_dir} is not appropriate for passing to functions like
\code{library}. To load a library from the cache yourself,
do e.g. \code{library("blah", lib.loc = file.path(get_lib_dir(), "blah-0.1.0"))}.
}
\examples{
\dontrun{
set_lib_dir("~/.apicheck")
}
get_lib_dir()
\dontrun{
clear_lib_dir()
}
}
\concept{utility functions}
