% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pastapi.R, R/search.R
\name{api_same_at}
\alias{api_same_at}
\alias{api_first_same}
\title{Compare function APIs across package versions}
\usage{
api_same_at(fn, package, version = get_version_at_date(package, date),
  date = NULL, current_fn = NULL)

api_first_same(fn, package, current_fn = NULL, search = c("binary",
  "forward", "backward", "all"), report = c("full", "brief"))
}
\arguments{
\item{fn}{Function name as a character string.}

\item{package}{Package. Alternatively, specify the function name as e.g. \code{"package::function"}.}

\item{version}{Version as a character string. If omitted, use the version available at \code{date}.}

\item{date}{Date, as a character string that can be read by \code{\link{as.Date}} e.g. "2016-01-01".}

\item{current_fn}{Current function for comparison. By default, \code{fn} in the current version of
the package (which is assumed to be available in a standard library location). If provided, this
must be an actual function, not a character string. You can use
\code{\link{get_fn_at}} for this.}

\item{search}{"binary", "forward", "backward" or "all". See Details.}

\item{report}{"brief" or "full". See Value.}
}
\value{
\code{api_same_at} returns \code{TRUE} or \code{FALSE}.
}
\description{
\code{api_first_same} reports the first package version where the API of a function was the same as now (or
the same as \code{current_fn}). \code{api_same_at} reports whether a specific previous version had the same
API as now.
}
\details{
If \code{fn} does not exist at \code{version}, \code{api_same_at} returns \code{FALSE} with a warning.
}
\examples{
\dontrun{
api_same_at("huxreg", "huxtable", "2.0.0")
}
\dontrun{
api_first_same("read.dta", "foreign")
}
}
